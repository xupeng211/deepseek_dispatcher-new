# .env.example
# DeepSeek Dispatcher 项目环境变量配置示例

# --- Redis 配置 ---
# Redis 连接 URL，格式：redis://<host>:<port>/<db_number>
# 例如：redis://localhost:6379/0
REDIS_URL="redis://localhost:6379/0"
# RQ 队列名称，用于区分不同的应用队列
TASK_QUEUE_NAME="deepseek_tasks"

# --- 大模型 API 配置 ---
# DashScope 模型的 API Key (阿里云)
# 请替换为您的实际 DashScope API Key
DASHSCOPE_API_KEY="sk-3d7252b8f7604d81b895a7f0509e2243"
# DashScope API Base URL (通常无需修改)
DASHSCOPE_BASE_URL="https://dashscope.aliyuncs.com/compatible-mode/v1"
# DeepSeek 模型的 API Key
# 请替换为您的实际 DeepSeek API Key
DEEPSEEK_API_KEY="sk-0d986d9c538b49d29ab0b51d190ccbb0"

# --- 模型相关配置 ---
# 默认使用的 LLM 模型名称 (例如: deepseek-chat, qwen-turbo)
MODEL_NAME="deepseek-chat"
# 模型生成文本的温度 (0.0 - 1.0, 越高越随机)
MODEL_TEMPERATURE=0.7
# 模型生成文本的 Top-P 参数 (0.0 - 1.0, 越低越保守)
MODEL_TOP_P=0.8
# 模型生成文本的最大 token 数 (如果需要，可以在 settings.py 的 MODEL_PARAMS 中添加)
# MODEL_MAX_TOKENS=100

# --- 日志和结果目录配置 ---
# 日志文件存放的目录 (相对于项目根目录)
LOGS_DIR="logs"
# 任务结果或临时文件存放的目录
RESULTS_DIR="results"
# 应用程序的日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL="INFO"

# --- FastAPI/Uvicorn 服务器配置 ---
# FastAPI 应用监听的主机地址 (0.0.0.0 表示监听所有网络接口)
FLASK_HOST="0.0.0.0"
# FastAPI 应用监听的端口
FLASK_PORT=8000
# 是否开启 FastAPI/Uvicorn 调试模式 (True/False)
# 生产环境应设置为 False
FLASK_DEBUG="False"
# 应用程序运行环境 (development, production, staging等)
FLASK_ENV="development"

# --- 限流配置 (可选) ---
# 限流存储 URI，通常指向 Redis URL
# RATELIMIT_STORAGE_URI="redis://localhost:6379/0"
# 默认限流速率 (例如: "100 per minute", "1000 per hour")
# DEFAULT_RATELIMIT="1000 per hour"

# --- 告警配置 (对应 common/alert_utils.py) ---
# 是否启用告警 (True/False)
ENABLE_ALERT="True" # 启用告警
# SMTP 服务器地址 (用于邮件告警)
# 例如：smtp.qq.com, smtp.gmail.com
SMTP_SERVER="smtp.example.com" # !!! 请替换为你的真实SMTP服务器地址 !!!
# SMTP 服务器端口 (SSL 通常是 465，TLS/STARTTLS 通常是 587)
SMTP_PORT=587 # !!! 请替换为你的真实SMTP端口 !!!
# 发件人邮箱地址
EMAIL_USER="your_sending_email@example.com" # !!! 请替换为你的真实发送邮箱地址 !!!
# 发件人邮箱密码或授权码
EMAIL_PASS="your_email_password_or_app_password" # !!! 请替换为你的真实邮箱密码或授权码 !!!
# 告警接收邮箱地址 (可以是一个或多个，用逗号分隔)
ALERT_EMAIL="your_receiving_email@example.com" # !!! 请替换为实际接收告警的邮箱地址 !!!
# 钉钉机器人 Webhook URL
# DINGTALK_WEBHOOK="https://oapi.dingtalk.com/robot/send?access_token=YOUR_DINGTALK_WEBHOOK_TOKEN" # 如果使用钉钉，请取消注释并填写真实URL

# --- Flask Secret Key (如果您的项目未来会引入 Flask Session 或其他需要密钥的功能) ---
# 一个随机的字符串，用于加密会话数据等。生产环境必须设置且保密。
# 可以使用 `python -c 'import os; print(os.urandom(24).hex())'` 生成
# FLASK_SECRET_KEY=""
