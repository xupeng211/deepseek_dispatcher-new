version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: deepseek_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: Dockerfile-web
    container_name: deepseek_web
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - DASHSCOPE_BASE_URL=${DASHSCOPE_BASE_URL}
      - MODEL_NAME=${MODEL_NAME}
      - MODEL_TEMPERATURE=${MODEL_TEMPERATURE}
      - MODEL_TOP_P=${MODEL_TOP_P}
      - TASK_QUEUE_NAME=${TASK_QUEUE_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOGS_DIR=/app/logs
      - RESULTS_DIR=/app/results
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=8000
      - FLASK_DEBUG=${FLASK_DEBUG}
      - FLASK_ENV=${FLASK_ENV}
      - DEFAULT_RATELIMIT=${DEFAULT_RATELIMIT}
      # 清理代理环境变量，确保不干扰内部网络
      - HTTP_PROXY=
      - HTTPS_PROXY=
      - NO_PROXY=localhost,127.0.0.1,redis,deepseek_redis,deepseek_web
      - http_proxy=
      - https_proxy=
      - no_proxy=localhost,127.0.0.1,redis,deepseek_redis,deepseek_web
    # 添加 DNS 配置，强制使用可靠的公共 DNS 服务器
    dns:
      - 8.8.8.8
      - 1.1.1.1
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./results:/app/results
    command: ["uvicorn", "web.app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile-worker
    container_name: deepseek_worker
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      - DASHSCOPE_BASE_URL=${DASHSCOPE_BASE_URL}
      - MODEL_NAME=${MODEL_NAME}
      - MODEL_TEMPERATURE=${MODEL_TEMPERATURE}
      - MODEL_TOP_P=${MODEL_TOP_P}
      - TASK_QUEUE_NAME=${TASK_QUEUE_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOGS_DIR=/app/logs
      - RESULTS_DIR=/app/results
      # 清理代理环境变量，确保不干扰内部网络
      - HTTP_PROXY=
      - HTTPS_PROXY=
      - NO_PROXY=localhost,127.0.0.1,redis,deepseek_redis,deepseek_web
      - http_proxy=
      - https_proxy=
      - no_proxy=localhost,127.0.0.1,redis,deepseek_redis,deepseek_web
    # 添加 DNS 配置，强制使用可靠的公共 DNS 服务器
    dns:
      - 8.8.8.8
      - 1.1.1.1
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./results:/app/results
    command: ["python", "worker/worker.py"]

volumes:
  redis_data: