# ~/projects/deepseek_dispatcher-new/docker-compose.yml

# version: '3.9' # <<<< 这一行已经删除，不再需要
services:
  redis:
    # 直接使用本地的 Redis 镜像名，不再需要远程仓库地址
    image: redis:latest
    container_name: deepseek_dispatcher-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: always

  dispatcher:
    # 构建时，因为基础镜像已在本地，所以不再需要传递 BASE_IMAGE 参数
    build:
      context: .
      # 移除 args 参数，因为基础镜像将从本地加载
      # args:
      #   BASE_IMAGE: mirror.baidu.com/library/python:3.12-slim # 示例：注释掉之前的远程源
    image: deepseek-dispatcher:latest # 明确镜像名称
    container_name: deepseek_dispatcher # 为 Dispatcher 容器设置明确的名称
    ports:
      - "8000:8000" # 映射 FastAPI 端口
    volumes:
      - ./logs:/app/logs # 映射本地的 ./logs 目录到容器的 /app/logs 目录
    environment:
      # Redis URL 会被所有 Supervisor 管理的程序继承，指向 Redis 容器的明确名称
      - REDIS_URL=redis://deepseek_dispatcher-redis:6379/0
      # 大模型 API Key 等环境变量，直接从宿主机的 .env 文件加载
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY} # 引用 .env 文件中的变量
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}   # 引用 .env 文件中的变量
      # ... 其他可能需要的环境变量 ...
    depends_on:
      - redis # 确保 redis 服务在 dispatcher 之前启动
    restart: always

volumes:
  redis_data: {} # 声明一个名为 redis_data 的具名卷，用于 Redis 数据持久化
